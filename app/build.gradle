apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'

Properties props = new Properties()
props.load(new FileInputStream(file("../config/signing.properties")))
props.load(new FileInputStream(file("../config/key.properties")))
android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        applicationId "com.jude.lbschat"
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        manifestPlaceholders = [
                UMENG_APPKEY    : props['UMENG_APPKEY'],
                SMS_MOB_APPKEY : props['SMS_MOB_APPKEY'],
                AMAP_KAY       : props['AMAP_KAY'],
                SMS_MOB_APPSECRET : props['SMS_MOB_APPSECRET'],
        ]
    }
    signingConfigs {
        release{
            keyAlias props['KEY_ALIAS']
            keyPassword props['KEY_PASSWORD']
            storeFile file(props['KEYSTORE_FILE'])
            storePassword props['KEYSTORE_PASSWORD']
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    if (output.outputFile != null && output.outputFile.name.endsWith('.apk')
                            &&'release'.equals(variant.buildType.name)) {
                        def apkFile = new File(
                                output.outputFile.getParent(),
                                "LBSChat_${variant.flavorName}_v${variant.versionName}_${buildTime()}.apk")
                        output.outputFile = apkFile
                    }
                }
            }
            ndk {
                abiFilters "armeabi", "armeabi-v7a"
            }
        }
        debug {
            signingConfig signingConfigs.release
            ndk {
                abiFilters "armeabi", "armeabi-v7a","x86"
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dexOptions {
        incremental true
        javaMaxHeapSize "4g"
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/maven/com.squareup.okio/okio/pom.xml'
        exclude 'META-INF/maven/com.squareup.okio/okio/pom.properties'
    }
}
def buildTime() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMdd')
    return formattedDate
}
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:23.3.0'
    compile 'com.android.support:design:23.3.0'
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.github.bumptech.glide:glide:3.6.1'
    compile 'com.google.code.gson:gson:2.4'
    compile 'com.squareup.retrofit2:retrofit:2.0.0-beta3'
    compile 'com.squareup.retrofit2:converter-gson:2.0.0-beta3'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.0.0-beta3'
    compile 'com.squareup.okhttp3:logging-interceptor:3.0.1'
    compile 'com.qiniu:qiniu-android-sdk:7.0.7'
    compile 'com.jude:beam:2.8.3'
    compile 'com.pnikosis:materialish-progress:1.7'
    compile('com.github.afollestad.material-dialogs:core:0.8.5.8@aar') {
        transitive = true
    }
    compile 'com.jude:swipebackhelper:2.1.3'
    compile 'com.jude:utils:1.1.0'
    compile 'com.jude:smssdk_mob:1.1.0'
    compile 'com.jude:fitsystemwindowlayout:1.0.8'
    compile 'com.umeng.analytics:analytics:latest.integration'

}
